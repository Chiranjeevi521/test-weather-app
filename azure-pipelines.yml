# Node.js with Angular
    

# Build a Node.js project that uses Angular.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- master

variables:
  CordovaBuild : 8.1.2,

pool:
  vmImage: 'macos-latest'

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '10.x'
  displayName: 'Install Node.js'

- task: DownloadSecureFile@1
  name: P12Certificate
  displayName: 'Download P12 Secure Certificate'
  inputs:
    secureFile: 'Certificates.p12'

- task: DownloadSecureFile@1
  name: ProvisionCertificate
  displayName: 'Download Mobile Provision Certificate'
  inputs:
    secureFile: 'xcode10.mobileprovision'

- script: |
    npm install -g @angular/cli
    npm install
    npm run ionic:build
  displayName: 'npm install and build'

# - script: sudo npm install -g appcenter-cli
# - script: appcenter login --token feebdff44f99eecaa582e06442080b2621793f1d

- script: |
    npm install -g cordova@8.1.2
    cordova platform add android@7.1.1
    cordova build android --debug
  displayName: 'Generating Android App through command lines'

- script: |
    cordova platform add ios
  displayName: 'Creating Xcode project'

- task: InstallAppleProvisioningProfile@1
  inputs:
    provisioningProfileLocation: 'secureFiles'
    provProfileSecureFile: '$(ProvisionCertificate)'

- task: InstallAppleCertificate@2
  inputs:
    certSecureFile: '$(P12Certificate)'
    certPwd: '$(P12password)'
    keychain: 'temp'

- script: |
    cordova build ios --debug
  displayName: 'Generating IOS App through command lines'


# - task: CordovaBuild@1
#   inputs:
#     platform: 'android'
#     configuration: '$(Configuration)'
#     outputPattern: 'bin'
#   displayName: 'Generation of Android App'

- task: CopyFiles@2
  inputs:
    SourceFolder: '$(Agent.BuildDirectory)'
    Contents: '**/*.apk'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
    CleanTargetFolder: true
  displayName: 'Copying Android App as Artifact'


- task: CopyFiles@2
  inputs:
    SourceFolder: '$(Agent.BuildDirectory)'
    Contents: '**/*.ipa'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
    CleanTargetFolder: true
  displayName: 'Copying IOS App as Artifact'

- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)'
    artifactName: 'outputs'
    artifactType: 'container'


# - task: CordovaBuild@1
#   inputs:
#     platform: 'ios'
#     configuration: '$(Configuration)'
#     p12: $(P12Certificate.secureFilePath)
#     p12pwd: $(P12password)
#     provProfile: $(ProvisionCertificate.secureFilePath)
#     outputPattern: 'bin'





